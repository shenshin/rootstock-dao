/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  RootstockGovernor,
  RootstockGovernorInterface,
} from "../../contracts/RootstockGovernor";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IVotes",
        name: "_token",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Empty",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "ProposalCanceled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "proposer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "targets",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "string[]",
        name: "signatures",
        type: "string[]",
      },
      {
        indexed: false,
        internalType: "bytes[]",
        name: "calldatas",
        type: "bytes[]",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "startBlock",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "endBlock",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "description",
        type: "string",
      },
    ],
    name: "ProposalCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "ProposalExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "oldProposalThreshold",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newProposalThreshold",
        type: "uint256",
      },
    ],
    name: "ProposalThresholdSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "oldQuorumNumerator",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newQuorumNumerator",
        type: "uint256",
      },
    ],
    name: "QuorumNumeratorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "support",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "weight",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "VoteCast",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "support",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "weight",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "reason",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "params",
        type: "bytes",
      },
    ],
    name: "VoteCastWithParams",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "oldVotingDelay",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newVotingDelay",
        type: "uint256",
      },
    ],
    name: "VotingDelaySet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "oldVotingPeriod",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newVotingPeriod",
        type: "uint256",
      },
    ],
    name: "VotingPeriodSet",
    type: "event",
  },
  {
    inputs: [],
    name: "BALLOT_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "COUNTING_MODE",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "EXTENDED_BALLOT_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "support",
        type: "uint8",
      },
    ],
    name: "castVote",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "support",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "castVoteBySig",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "support",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "castVoteWithReason",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "support",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "params",
        type: "bytes",
      },
    ],
    name: "castVoteWithReasonAndParams",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "support",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "params",
        type: "bytes",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "castVoteWithReasonAndParamsBySig",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "targets",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "calldatas",
        type: "bytes[]",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "enum GovernorCountingUniversal.CountingType",
        name: "countingType",
        type: "uint8",
      },
    ],
    name: "createProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "targets",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "calldatas",
        type: "bytes[]",
      },
      {
        internalType: "bytes32",
        name: "descriptionHash",
        type: "bytes32",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "getVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "params",
        type: "bytes",
      },
    ],
    name: "getVotesWithParams",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasVoted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "targets",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "calldatas",
        type: "bytes[]",
      },
      {
        internalType: "bytes32",
        name: "descriptionHash",
        type: "bytes32",
      },
    ],
    name: "hashProposal",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "proposalDeadline",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "proposalIds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "proposalSnapshot",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposalThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "numTeams",
        type: "uint8",
      },
    ],
    name: "proposalVotes",
    outputs: [
      {
        internalType: "uint256[]",
        name: "votes",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "proposalVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "againstVotes",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "forVotes",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "abstainVotes",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "targets",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "calldatas",
        type: "bytes[]",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
    ],
    name: "propose",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "quorum",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "quorumDenominator",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "quorumNumerator",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "quorumNumerator",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "relay",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newProposalThreshold",
        type: "uint256",
      },
    ],
    name: "setProposalThreshold",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newVotingDelay",
        type: "uint256",
      },
    ],
    name: "setVotingDelay",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newVotingPeriod",
        type: "uint256",
      },
    ],
    name: "setVotingPeriod",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "state",
    outputs: [
      {
        internalType: "enum IGovernor.ProposalState",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IVotes",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newQuorumNumerator",
        type: "uint256",
      },
    ],
    name: "updateQuorumNumerator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "votingDelay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "votingPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6101606040523480156200001257600080fd5b50604051620042ba380380620042ba833981016040819052620000359162000827565b6006816001600a6000604051806040016040528060118152602001702937b7ba39ba37b1b5a3b7bb32b93737b960791b81525080620000796200016660201b60201c565b815160208084019190912082518383012060e08290526101008190524660a0818152604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f81880181905281830187905260608201869052608082019490945230818401528151808203909301835260c00190528051940193909320919290916080523060c05261012052505082516200011f92506000915060208401906200078b565b506200012d90508362000181565b6200013882620001c2565b620001438162000269565b5050506001600160a01b0316610140526200015e81620002aa565b5050620008b5565b6040805180820190915260018152603160f81b602082015290565b60045460408051918252602082018390527fc565b045403dc03c2eea82b81a0465edad9e2e7fc4d97e11421c209da93d7a93910160405180910390a1600455565b60008111620002285760405162461bcd60e51b815260206004820152602760248201527f476f7665726e6f7253657474696e67733a20766f74696e6720706572696f6420604482015266746f6f206c6f7760c81b60648201526084015b60405180910390fd5b60055460408051918252602082018390527f7e3f7f0708a84de9203036abaa450dccc85ad5ff52f78c170f3edb55cf5e8828910160405180910390a1600555565b60065460408051918252602082018390527fccb45da8d5717e6c4544694297c4ba5cf151d455c9bb0ed4fc7a38411bc05461910160405180910390a1600655565b60648111156200032f5760405162461bcd60e51b815260206004820152604360248201527f476f7665726e6f72566f74657351756f72756d4672616374696f6e3a2071756f60448201527f72756d4e756d657261746f72206f7665722071756f72756d44656e6f6d696e616064820152623a37b960e91b608482015260a4016200021f565b60006200033b62000422565b905080158015906200034d5750600954155b15620003c85760096000016040518060400160405280600063ffffffff16815260200162000386846200045a60201b6200180c1760201c565b6001600160e01b0390811690915282546001810184556000938452602093849020835194909301519091166401000000000263ffffffff909316929092179101555b620003e3826009620004c960201b620018791790919060201c565b505060408051828152602081018490527f0553476bf02ef2726e8ce5ced78d63e26e602e4a2257b1f559418e24b4633997910160405180910390a15050565b6009546000901562000453576200044560096200051c60201b620018af1760201c565b6001600160e01b0316905090565b5060085490565b60006001600160e01b03821115620004c55760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20326044820152663234206269747360c81b60648201526084016200021f565b5090565b6000806200050684600001620004ea436200056a60201b620018f61760201c565b62000500866200045a60201b6200180c1760201c565b620005d1565b6001600160e01b03918216969116945092505050565b80546000908015620005605762000548836200053a60018462000852565b600091825260209091200190565b5464010000000090046001600160e01b031662000563565b60005b9392505050565b600063ffffffff821115620004c55760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201526532206269747360d01b60648201526084016200021f565b8254600090819080156200072d576000620005f3876200053a60018562000852565b60408051808201909152905463ffffffff8082168084526401000000009092046001600160e01b031660208401529192509087161015620006775760405162461bcd60e51b815260206004820152601760248201527f436865636b706f696e743a20696e76616c6964206b657900000000000000000060448201526064016200021f565b8563ffffffff16816000015163ffffffff161415620006cc5784620006a3886200053a60018662000852565b80546001600160e01b03929092166401000000000263ffffffff9092169190911790556200071c565b6040805180820190915263ffffffff80881682526001600160e01b0380881660208085019182528b54600181018d5560008d81529190912094519151909216640100000000029216919091179101555b602001519250839150620007839050565b50506040805180820190915263ffffffff80851682526001600160e01b0380851660208085019182528854600181018a5560008a8152918220955192519093166401000000000291909316179201919091559050815b935093915050565b828054620007999062000878565b90600052602060002090601f016020900481019282620007bd576000855562000808565b82601f10620007d857805160ff191683800117855562000808565b8280016001018555821562000808579182015b8281111562000808578251825591602001919060010190620007eb565b50620004c59291505b80821115620004c5576000815560010162000811565b6000602082840312156200083a57600080fd5b81516001600160a01b03811681146200056357600080fd5b6000828210156200087357634e487b7160e01b600052601160045260246000fd5b500390565b600181811c908216806200088d57607f821691505b60208210811415620008af57634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a05160c05160e05161010051610120516101405161399c6200091e60003960008181610812015281816120fa01526122c40152600061258e015260006125dd015260006125b8015260006125110152600061253b01526000612565015261399c6000f3fe60806040526004361061023f5760003560e01c80637b3c71d31161012e578063c59057e4116100ab578063eb9019d41161006f578063eb9019d414610774578063ece40cc114610794578063f23a6e61146107b4578063f8ce560a146107e0578063fc0c546a1461080057600080fd5b8063c59057e41461069a578063dd4e2ba5146106ba578063deaaa7cc14610700578063e3e396e814610734578063ea0217cf1461075457600080fd5b8063a7713a70116100f2578063a7713a7014610611578063b58131b014610626578063bc197c811461063b578063c01f9e3714610667578063c28bc2fa1461068757600080fd5b80637b3c71d3146105705780637d5e81e21461059057806397c3d334146105b05780639a802a6d146105c45780639b644a23146105e457600080fd5b80633932abb1116101bc57806354fd4d501161018057806354fd4d50146104c657806356781388146104f05780635f398a141461051057806360c4247f1461053057806370b0f6601461055057600080fd5b80633932abb1146103df5780633bccf4fd146103f45780633e4f49e6146104145780634385963214610441578063544ffc9c1461048b57600080fd5b806306fdde031161020357806306fdde0314610312578063150b7a02146103345780632656227d146103785780632d63f6931461038b5780632fe3e261146103ab57600080fd5b806301ffc9a71461024d57806302a251a31461028257806303420181146102a5578063048fd2ef146102c557806306f3f9e6146102f257600080fd5b3661024857005b005b600080fd5b34801561025957600080fd5b5061026d610268366004612acd565b61084c565b60405190151581526020015b60405180910390f35b34801561028e57600080fd5b506102976108b9565b604051908152602001610279565b3480156102b157600080fd5b506102976102c0366004612c03565b6108c9565b3480156102d157600080fd5b506102e56102e0366004612ca9565b6109c1565b6040516102799190612d10565b3480156102fe57600080fd5b5061024661030d366004612d23565b610b89565b34801561031e57600080fd5b50610327610bd0565b6040516102799190612d98565b34801561034057600080fd5b5061035f61034f366004612dc2565b630a85bd0160e11b949350505050565b6040516001600160e01b03199091168152602001610279565b610297610386366004612f98565b610c62565b34801561039757600080fd5b506102976103a6366004612d23565b610d89565b3480156103b757600080fd5b506102977fb3b3f3b703cd84ce352197dcff232b1b5d3cfb2025ce47cf04742d0651f1af8881565b3480156103eb57600080fd5b50610297610dc0565b34801561040057600080fd5b5061029761040f366004613027565b610dcb565b34801561042057600080fd5b5061043461042f366004612d23565b610e41565b604051610279919061308b565b34801561044d57600080fd5b5061026d61045c3660046130b3565b60008281526007602090815260408083206001600160a01b038516845260030190915290205460ff1692915050565b34801561049757600080fd5b506104ab6104a6366004612d23565b610f3e565b60408051938452602084019290925290820152606001610279565b3480156104d257600080fd5b506040805180820190915260018152603160f81b6020820152610327565b3480156104fc57600080fd5b5061029761050b366004612ca9565b611007565b34801561051c57600080fd5b5061029761052b3660046130d6565b611030565b34801561053c57600080fd5b5061029761054b366004612d23565b61107a565b34801561055c57600080fd5b5061024661056b366004612d23565b61110f565b34801561057c57600080fd5b5061029761058b366004613159565b611153565b34801561059c57600080fd5b506102976105ab3660046131b2565b6111a5565b3480156105bc57600080fd5b506064610297565b3480156105d057600080fd5b506102976105df366004613252565b611468565b3480156105f057600080fd5b506102976105ff366004612d23565b600a6020526000908152604090205481565b34801561061d57600080fd5b5061029761147f565b34801561063257600080fd5b506102976114a9565b34801561064757600080fd5b5061035f6106563660046132a8565b63bc197c8160e01b95945050505050565b34801561067357600080fd5b50610297610682366004612d23565b6114b4565b610246610695366004613337565b6114e3565b3480156106a657600080fd5b506102976106b5366004612f98565b6115af565b3480156106c657600080fd5b506040805180820190915260208082527f737570706f72743d627261766f2671756f72756d3d666f722c6162737461696e90820152610327565b34801561070c57600080fd5b506102977f150214d74d59b7d1e90c73fc22ef3d991dd0a76b046543d4d80ab92d2a50328f81565b34801561074057600080fd5b5061024661074f366004613378565b6115e9565b34801561076057600080fd5b5061024661076f366004612d23565b611758565b34801561078057600080fd5b5061029761078f36600461343d565b61179c565b3480156107a057600080fd5b506102466107af366004612d23565b6117bd565b3480156107c057600080fd5b5061035f6107cf366004613467565b63f23a6e6160e01b95945050505050565b3480156107ec57600080fd5b506102976107fb366004612d23565b611801565b34801561080c57600080fd5b506108347f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610279565b60006001600160e01b0319821663bf26d89760e01b148061087d57506001600160e01b031982166379dd796f60e01b145b8061089857506001600160e01b03198216630271189760e51b145b806108b357506301ffc9a760e01b6001600160e01b03198316145b92915050565b60006108c460055490565b905090565b60008061096d6109657fb3b3f3b703cd84ce352197dcff232b1b5d3cfb2025ce47cf04742d0651f1af888c8c8c8c6040516109059291906134cb565b60405180910390208b8051906020012060405160200161094a959493929190948552602085019390935260ff9190911660408401526060830152608082015260a00190565b6040516020818303038152906040528051906020012061195b565b8686866119a9565b90506109b38a828b8b8b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508d92506119c7915050565b9a9950505050505050505050565b606060008260ff161180156109da575060fa8260ff1611155b610a415760405162461bcd60e51b815260206004820152602d60248201527f476f7665726e6f72436f756e74696e67556e6976657273616c3a207465616d7360448201526c206f7574206f662072616e676560981b60648201526084015b60405180910390fd5b60008381526007602052604090206001815460ff166001811115610a6757610a67613075565b14610ada5760405162461bcd60e51b815260206004820152603d60248201527f476f7665726e6f72436f756e74696e67556e6976657273616c3a2043616e206260448201527f652063616c6c6564206f6e6c7920696e2042616c6c6f74206d6f6465290000006064820152608401610a38565b610ae58360016134f1565b60ff166001600160401b03811115610aff57610aff612b4e565b604051908082528060200260200182016040528015610b28578160200160208202803683370190505b50915060005b8360ff168160ff1611610b815760ff811660008181526002840160205260409020548451909185918110610b6457610b64613516565b602090810291909101015280610b798161352c565b915050610b2e565b505092915050565b333014610ba85760405162461bcd60e51b8152600401610a389061354c565b610bc4565b80610bb86002611b29565b14610bc257610bad565b505b610bcd81611ba8565b50565b606060008054610bdf90613583565b80601f0160208091040260200160405190810160405280929190818152602001828054610c0b90613583565b8015610c585780601f10610c2d57610100808354040283529160200191610c58565b820191906000526020600020905b815481529060010190602001808311610c3b57829003601f168201915b5050505050905090565b600080610c71868686866115af565b90506000610c7e82610e41565b90506004816007811115610c9457610c94613075565b1480610cb157506005816007811115610caf57610caf613075565b145b610d075760405162461bcd60e51b815260206004820152602160248201527f476f7665726e6f723a2070726f706f73616c206e6f74207375636365737366756044820152601b60fa1b6064820152608401610a38565b600082815260016020818152604092839020600201805460ff191690921790915590518381527f712ae1383f79ac853f8d882153778e0260ef8f03b504e2866e0593e04d2b291f910160405180910390a1610d658288888888611cf4565b610d728288888888611d82565b610d7f8288888888611cf4565b5095945050505050565b60008181526001602090815260408083208151928301909152546001600160401b0316908190525b6001600160401b031692915050565b60006108c460045490565b604080517f150214d74d59b7d1e90c73fc22ef3d991dd0a76b046543d4d80ab92d2a50328f602082015290810186905260ff851660608201526000908190610e19906109659060800161094a565b9050610e3687828860405180602001604052806000815250611e78565b979650505050505050565b6000818152600160205260408120600281015460ff1615610e655750600792915050565b6002810154610100900460ff1615610e805750600292915050565b6000610e8b84610d89565b905080610eda5760405162461bcd60e51b815260206004820152601d60248201527f476f7665726e6f723a20756e6b6e6f776e2070726f706f73616c2069640000006044820152606401610a38565b438110610eeb575060009392505050565b6000610ef6856114b4565b9050438110610f0a57506001949350505050565b610f1385611ea4565b8015610f235750610f2385611f20565b15610f3357506004949350505050565b506003949350505050565b60008181526007602052604081208190819081815460ff166001811115610f6757610f67613075565b14610fda5760405162461bcd60e51b815260206004820152603c60248201527f476f7665726e6f72436f756e74696e67556e6976657273616c3a2043616e206260448201527f652063616c6c6564206f6e6c7920696e2053696d706c65206d6f6465000000006064820152608401610a38565b60008080526002918201602052604080822054600183528183205493835291205490969195509350915050565b60008033905061102884828560405180602001604052806000815250611e78565b949350505050565b600080339050610e3687828888888080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508a92506119c7915050565b6009546000908061108f575050600854919050565b6000600961109e6001846135b8565b815481106110ae576110ae613516565b60009182526020918290206040805180820190915291015463ffffffff8116808352600160201b9091046001600160e01b0316928201929092529150841061110457602001516001600160e01b03169392505050565b611028600985611f76565b33301461112e5760405162461bcd60e51b8152600401610a389061354c565b61114a565b8061113e6002611b29565b1461114857611133565b505b610bcd81612028565b60008033905061119b86828787878080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611e7892505050565b9695505050505050565b60006111af6114a9565b6111be3361078f6001436135b8565b10156112265760405162461bcd60e51b815260206004820152603160248201527f476f7665726e6f723a2070726f706f73657220766f7465732062656c6f7720706044820152701c9bdc1bdcd85b081d1a1c995cda1bdb19607a1b6064820152608401610a38565b600061123b86868686805190602001206115af565b9050845186511461125e5760405162461bcd60e51b8152600401610a38906135cf565b835186511461127f5760405162461bcd60e51b8152600401610a38906135cf565b60008651116112d05760405162461bcd60e51b815260206004820152601860248201527f476f7665726e6f723a20656d7074792070726f706f73616c00000000000000006044820152606401610a38565b600081815260016020908152604091829020825191820190925281546001600160401b031690819052156113505760405162461bcd60e51b815260206004820152602160248201527f476f7665726e6f723a2070726f706f73616c20616c72656164792065786973746044820152607360f81b6064820152608401610a38565b600061136261135d610dc0565b612069565b61136b43612069565b6113759190613610565b9050600061138461135d6108b9565b61138e9083613610565b835467ffffffffffffffff19166001600160401b038416178455905060018301805467ffffffffffffffff19166001600160401b0383161790557f7d84a6263ae0d98d3329bd7b46bb4e8d6f98cd35a7adb45c274c8b7fd5ebd5e084338b8b8d516001600160401b0381111561140657611406612b4e565b60405190808252806020026020018201604052801561143957816020015b60608152602001906001900390816114245790505b508c88888e604051611453999897969594939291906136c6565b60405180910390a15091979650505050505050565b60006114758484846120d1565b90505b9392505050565b600954600090156114a25761149460096118af565b6001600160e01b0316905090565b5060085490565b60006108c460065490565b60008181526001602081815260408084208151928301909152909101546001600160401b031690819052610db1565b3330146115025760405162461bcd60e51b8152600401610a389061354c565b61151e565b806115126002611b29565b1461151c57611507565b505b600080856001600160a01b031685858560405161153c9291906134cb565b60006040518083038185875af1925050503d8060008114611579576040519150601f19603f3d011682016040523d82523d6000602084013e61157e565b606091505b50915091506115a6828260405180606001604052806028815260200161391860289139612176565b50505050505050565b6000848484846040516020016115c894939291906137b5565b60408051601f19818403018152919052805160209091012095945050505050565b6000808260018111156115fe576115fe613075565b141561161757611610868686866111a5565b9050611694565b600182600181111561162b5761162b613075565b141561163d576116108686868661218f565b60405162461bcd60e51b815260206004820152602660248201527f526f6f7473746f636b476f7665726e6f723a20756e6b6e6f776e20766f74696e60448201526567207479706560d01b6064820152608401610a38565b6000836040516020016116a79190613800565b60408051601f1981840301815291815281516020928301206000818152600a909352912054909150156117425760405162461bcd60e51b815260206004820152603860248201527f526f6f7473746f636b476f7665726e6f723a2050726f706f73616c206465736360448201527f72697074696f6e2073686f756c6420626520756e6971756500000000000000006064820152608401610a38565b6000908152600a60205260409020555050505050565b3330146117775760405162461bcd60e51b8152600401610a389061354c565b611793565b806117876002611b29565b146117915761177c565b505b610bcd816121bf565b600061147883836117b860408051602081019091526000815290565b6120d1565b3330146117dc5760405162461bcd60e51b8152600401610a389061354c565b6117f8565b806117ec6002611b29565b146117f6576117e1565b505b610bcd81612260565b60006108b3826122a1565b60006001600160e01b038211156118755760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20326044820152663234206269747360c81b6064820152608401610a38565b5090565b60008061189784611889436118f6565b6118928661180c565b61235a565b6001600160e01b0391821693501690505b9250929050565b805460009080156118ed576118d7836118c96001846135b8565b600091825260209091200190565b54600160201b90046001600160e01b0316611478565b60009392505050565b600063ffffffff8211156118755760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201526532206269747360d01b6064820152608401610a38565b60006108b3611968612504565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b60008060006119ba8787878761262b565b91509150610d7f816126ef565b60008581526001602081905260408220906119e188610e41565b60078111156119f2576119f2613075565b14611a4b5760405162461bcd60e51b815260206004820152602360248201527f476f7665726e6f723a20766f7465206e6f742063757272656e746c792061637460448201526269766560e81b6064820152608401610a38565b604080516020810190915281546001600160401b031690819052600090611a74908890866120d1565b9050611a83888888848861283d565b8351611ad557866001600160a01b03167fb8e138887d0aa13bab447e82de9d5c1777041ecd21ca36ba824ff1e6c07ddda489888489604051611ac8949392919061381c565b60405180910390a2610e36565b866001600160a01b03167fe2babfbac5889a709b63bb7f598b324e08bc5a4fb9ec647fb3cbc9ec07eb87128988848989604051611b16959493929190613844565b60405180910390a2979650505050505050565b6000611b448254600f81810b600160801b909204900b131590565b15611b6257604051631ed9509560e11b815260040160405180910390fd5b508054600f0b6000818152600180840160205260408220805492905583546fffffffffffffffffffffffffffffffff191692016001600160801b03169190911790915590565b6064811115611c2b5760405162461bcd60e51b815260206004820152604360248201527f476f7665726e6f72566f74657351756f72756d4672616374696f6e3a2071756f60448201527f72756d4e756d657261746f72206f7665722071756f72756d44656e6f6d696e616064820152623a37b960e91b608482015260a401610a38565b6000611c3561147f565b90508015801590611c465750600954155b15611caa57604080518082019091526000815260099060208101611c698461180c565b6001600160e01b039081169091528254600181018455600093845260209384902083519490930151909116600160201b0263ffffffff909316929092179101555b611cb5600983611879565b505060408051828152602081018490527f0553476bf02ef2726e8ce5ced78d63e26e602e4a2257b1f559418e24b4633997910160405180910390a15050565b611d7b565b8451811015611d7957306001600160a01b0316858281518110611d1e57611d1e613516565b60200260200101516001600160a01b03161415611d6957611d69838281518110611d4a57611d4a613516565b60200260200101518051906020012060026129ee90919063ffffffff16565b611d728161388a565b9050611cf9565b505b5050505050565b600060405180606001604052806027815260200161394060279139905060005b85518110156115a657600080878381518110611dc057611dc0613516565b60200260200101516001600160a01b0316878481518110611de357611de3613516565b6020026020010151878581518110611dfd57611dfd613516565b6020026020010151604051611e129190613800565b60006040518083038185875af1925050503d8060008114611e4f576040519150601f19603f3d011682016040523d82523d6000602084013e611e54565b606091505b5091509150611e64828286612176565b50505080611e719061388a565b9050611da2565b6000611e9b85858585611e9660408051602081019091526000815290565b6119c7565b95945050505050565b60008181526007602052604081206001815460ff166001811115611eca57611eca613075565b1415611eea578060010154611ee16107fb85610d89565b11159392505050565b6002600081815290820160205260408082205460018352912054611f0e91906138a5565b611ee16107fb85610d89565b50919050565b60008181526007602052604081206001815460ff166001811115611f4657611f46613075565b1415611f555761147883611ea4565b60008080526002909101602052604080822054600183529120541192915050565b6000438210611fc75760405162461bcd60e51b815260206004820181905260248201527f436865636b706f696e74733a20626c6f636b206e6f7420796574206d696e65646044820152606401610a38565b6000611fd2836118f6565b84549091506000611fe586848385612a2a565b9050801561201257611ffc866118c96001846135b8565b54600160201b90046001600160e01b0316612015565b60005b6001600160e01b03169695505050505050565b60045460408051918252602082018390527fc565b045403dc03c2eea82b81a0465edad9e2e7fc4d97e11421c209da93d7a93910160405180910390a1600455565b60006001600160401b038211156118755760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203660448201526534206269747360d01b6064820152608401610a38565b604051630748d63560e31b81526001600160a01b038481166004830152602482018490526000917f000000000000000000000000000000000000000000000000000000000000000090911690633a46b1a89060440160206040518083038186803b15801561213e57600080fd5b505afa158015612152573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061147591906138bd565b60608315612185575081611478565b6114788383612a88565b600061219d858585856111a5565b6000818152600760205260409020805460ff1916600117905595945050505050565b6000811161221f5760405162461bcd60e51b815260206004820152602760248201527f476f7665726e6f7253657474696e67733a20766f74696e6720706572696f6420604482015266746f6f206c6f7760c81b6064820152608401610a38565b60055460408051918252602082018390527f7e3f7f0708a84de9203036abaa450dccc85ad5ff52f78c170f3edb55cf5e8828910160405180910390a1600555565b60065460408051918252602082018390527fccb45da8d5717e6c4544694297c4ba5cf151d455c9bb0ed4fc7a38411bc05461910160405180910390a1600655565b600060646122ae8361107a565b604051632394e7a360e21b8152600481018590527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690638e539e8c9060240160206040518083038186803b15801561230e57600080fd5b505afa158015612322573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061234691906138bd565b61235091906138d6565b6108b391906138f5565b8254600090819080156124a7576000612378876118c96001856135b8565b60408051808201909152905463ffffffff808216808452600160201b9092046001600160e01b0316602084015291925090871610156123f95760405162461bcd60e51b815260206004820152601760248201527f436865636b706f696e743a20696e76616c6964206b65790000000000000000006044820152606401610a38565b8563ffffffff16816000015163ffffffff1614156124485784612421886118c96001866135b8565b80546001600160e01b0392909216600160201b0263ffffffff909216919091179055612497565b6040805180820190915263ffffffff80881682526001600160e01b0380881660208085019182528b54600181018d5560008d81529190912094519151909216600160201b029216919091179101555b6020015192508391506124fc9050565b50506040805180820190915263ffffffff80851682526001600160e01b0380851660208085019182528854600181018a5560008a815291822095519251909316600160201b0291909316179201919091559050815b935093915050565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801561255d57507f000000000000000000000000000000000000000000000000000000000000000046145b1561258757507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561266257506000905060036126e6565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156126b6573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166126df576000600192509250506126e6565b9150600090505b94509492505050565b600081600481111561270357612703613075565b141561270c5750565b600181600481111561272057612720613075565b141561276e5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610a38565b600281600481111561278257612782613075565b14156127d05760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610a38565b60038160048111156127e4576127e4613075565b1415610bcd5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610a38565b60008581526007602090815260408083206001600160a01b0388168452600381019092529091205460ff16156128ca5760405162461bcd60e51b815260206004820152602c60248201527f476f7665726e6f72436f756e74696e67556e6976657273616c3a20766f74652060448201526b185b1c9958591e4818d85cdd60a21b6064820152608401610a38565b6000815460ff1660018111156128e2576128e2613075565b1480156128f2575060028460ff16115b1561294f5760405162461bcd60e51b815260206004820152602760248201527f476f7665726e6f72436f756e74696e67556e6976657273616c3a20696e76616c604482015266696420766f746560c81b6064820152608401610a38565b6001600160a01b03851660009081526003820160209081526040808320805460ff1916600117905560ff8716835260028401909152812080548592906129969084906138a5565b9091555060019050815460ff1660018111156129b4576129b4613075565b1480156129c2575060ff8416155b156129cd5750611d7b565b828160010160008282546129e191906138a5565b9091555050505050505050565b8154600160801b90819004600f0b6000818152600180860160205260409091209390935583546001600160801b03908116939091011602179055565b60005b81831015612a80576000612a418484612ab2565b60008781526020902090915063ffffffff86169082015463ffffffff161115612a6c57809250612a7a565b612a778160016138a5565b93505b50612a2d565b509392505050565b815115612a985781518083602001fd5b8060405162461bcd60e51b8152600401610a389190612d98565b6000612ac160028484186138f5565b611478908484166138a5565b600060208284031215612adf57600080fd5b81356001600160e01b03198116811461147857600080fd5b803560ff81168114612b0857600080fd5b919050565b60008083601f840112612b1f57600080fd5b5081356001600160401b03811115612b3657600080fd5b6020830191508360208285010111156118a857600080fd5b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715612b8c57612b8c612b4e565b604052919050565b600082601f830112612ba557600080fd5b81356001600160401b03811115612bbe57612bbe612b4e565b612bd1601f8201601f1916602001612b64565b818152846020838601011115612be657600080fd5b816020850160208301376000918101602001919091529392505050565b60008060008060008060008060e0898b031215612c1f57600080fd5b88359750612c2f60208a01612af7565b965060408901356001600160401b0380821115612c4b57600080fd5b612c578c838d01612b0d565b909850965060608b0135915080821115612c7057600080fd5b50612c7d8b828c01612b94565b945050612c8c60808a01612af7565b925060a0890135915060c089013590509295985092959890939650565b60008060408385031215612cbc57600080fd5b82359150612ccc60208401612af7565b90509250929050565b600081518084526020808501945080840160005b83811015612d0557815187529582019590820190600101612ce9565b509495945050505050565b6020815260006114786020830184612cd5565b600060208284031215612d3557600080fd5b5035919050565b60005b83811015612d57578181015183820152602001612d3f565b83811115612d66576000848401525b50505050565b60008151808452612d84816020860160208601612d3c565b601f01601f19169290920160200192915050565b6020815260006114786020830184612d6c565b80356001600160a01b0381168114612b0857600080fd5b60008060008060808587031215612dd857600080fd5b612de185612dab565b9350612def60208601612dab565b92506040850135915060608501356001600160401b03811115612e1157600080fd5b612e1d87828801612b94565b91505092959194509250565b60006001600160401b03821115612e4257612e42612b4e565b5060051b60200190565b600082601f830112612e5d57600080fd5b81356020612e72612e6d83612e29565b612b64565b82815260059290921b84018101918181019086841115612e9157600080fd5b8286015b84811015612eb357612ea681612dab565b8352918301918301612e95565b509695505050505050565b600082601f830112612ecf57600080fd5b81356020612edf612e6d83612e29565b82815260059290921b84018101918181019086841115612efe57600080fd5b8286015b84811015612eb35780358352918301918301612f02565b600082601f830112612f2a57600080fd5b81356020612f3a612e6d83612e29565b82815260059290921b84018101918181019086841115612f5957600080fd5b8286015b84811015612eb35780356001600160401b03811115612f7c5760008081fd5b612f8a8986838b0101612b94565b845250918301918301612f5d565b60008060008060808587031215612fae57600080fd5b84356001600160401b0380821115612fc557600080fd5b612fd188838901612e4c565b95506020870135915080821115612fe757600080fd5b612ff388838901612ebe565b9450604087013591508082111561300957600080fd5b5061301687828801612f19565b949793965093946060013593505050565b600080600080600060a0868803121561303f57600080fd5b8535945061304f60208701612af7565b935061305d60408701612af7565b94979396509394606081013594506080013592915050565b634e487b7160e01b600052602160045260246000fd5b60208101600883106130ad57634e487b7160e01b600052602160045260246000fd5b91905290565b600080604083850312156130c657600080fd5b82359150612ccc60208401612dab565b6000806000806000608086880312156130ee57600080fd5b853594506130fe60208701612af7565b935060408601356001600160401b038082111561311a57600080fd5b61312689838a01612b0d565b9095509350606088013591508082111561313f57600080fd5b5061314c88828901612b94565b9150509295509295909350565b6000806000806060858703121561316f57600080fd5b8435935061317f60208601612af7565b925060408501356001600160401b0381111561319a57600080fd5b6131a687828801612b0d565b95989497509550505050565b600080600080608085870312156131c857600080fd5b84356001600160401b03808211156131df57600080fd5b6131eb88838901612e4c565b9550602087013591508082111561320157600080fd5b61320d88838901612ebe565b9450604087013591508082111561322357600080fd5b61322f88838901612f19565b9350606087013591508082111561324557600080fd5b50612e1d87828801612b94565b60008060006060848603121561326757600080fd5b61327084612dab565b92506020840135915060408401356001600160401b0381111561329257600080fd5b61329e86828701612b94565b9150509250925092565b600080600080600060a086880312156132c057600080fd5b6132c986612dab565b94506132d760208701612dab565b935060408601356001600160401b03808211156132f357600080fd5b6132ff89838a01612ebe565b9450606088013591508082111561331557600080fd5b61332189838a01612ebe565b9350608088013591508082111561313f57600080fd5b6000806000806060858703121561334d57600080fd5b61335685612dab565b93506020850135925060408501356001600160401b0381111561319a57600080fd5b600080600080600060a0868803121561339057600080fd5b85356001600160401b03808211156133a757600080fd5b6133b389838a01612e4c565b965060208801359150808211156133c957600080fd5b6133d589838a01612ebe565b955060408801359150808211156133eb57600080fd5b6133f789838a01612f19565b9450606088013591508082111561340d57600080fd5b5061341a88828901612b94565b92505060808601356002811061342f57600080fd5b809150509295509295909350565b6000806040838503121561345057600080fd5b61345983612dab565b946020939093013593505050565b600080600080600060a0868803121561347f57600080fd5b61348886612dab565b945061349660208701612dab565b9350604086013592506060860135915060808601356001600160401b038111156134bf57600080fd5b61314c88828901612b94565b8183823760009101908152919050565b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff84168060ff0382111561350e5761350e6134db565b019392505050565b634e487b7160e01b600052603260045260246000fd5b600060ff821660ff811415613543576135436134db565b60010192915050565b60208082526018908201527f476f7665726e6f723a206f6e6c79476f7665726e616e63650000000000000000604082015260600190565b600181811c9082168061359757607f821691505b60208210811415611f1a57634e487b7160e01b600052602260045260246000fd5b6000828210156135ca576135ca6134db565b500390565b60208082526021908201527f476f7665726e6f723a20696e76616c69642070726f706f73616c206c656e67746040820152600d60fb1b606082015260800190565b60006001600160401b03808316818516808303821115613632576136326134db565b01949350505050565b600081518084526020808501945080840160005b83811015612d055781516001600160a01b03168752958201959082019060010161364f565b6000815180845260208085019450848260051b860182860160005b858110156136b95783830389526136a7838351612d6c565b9885019892509084019060010161368f565b5090979650505050505050565b60006101208b8352602060018060a01b038c16818501528160408501526136ef8285018c61363b565b91508382036060850152613703828b612cd5565b915083820360808501528189518084528284019150828160051b850101838c0160005b8381101561375457601f19878403018552613742838351612d6c565b94860194925090850190600101613726565b505086810360a0880152613768818c613674565b94505050505061378360c08401876001600160401b03169052565b6001600160401b03851660e08401528281036101008401526137a58185612d6c565b9c9b505050505050505050505050565b6080815260006137c8608083018761363b565b82810360208401526137da8187612cd5565b905082810360408401526137ee8186613674565b91505082606083015295945050505050565b60008251613812818460208701612d3c565b9190910192915050565b84815260ff8416602082015282604082015260806060820152600061119b6080830184612d6c565b85815260ff8516602082015283604082015260a06060820152600061386c60a0830185612d6c565b828103608084015261387e8185612d6c565b98975050505050505050565b600060001982141561389e5761389e6134db565b5060010190565b600082198211156138b8576138b86134db565b500190565b6000602082840312156138cf57600080fd5b5051919050565b60008160001904831182151516156138f0576138f06134db565b500290565b60008261391257634e487b7160e01b600052601260045260246000fd5b50049056fe476f7665726e6f723a2072656c617920726576657274656420776974686f7574206d657373616765476f7665726e6f723a2063616c6c20726576657274656420776974686f7574206d657373616765a2646970667358221220a35833fd2ab47977e337d8edc99428b52dbc06cfca14a9fc1743a49059b079d464736f6c63430008090033";

type RootstockGovernorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RootstockGovernorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RootstockGovernor__factory extends ContractFactory {
  constructor(...args: RootstockGovernorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _token: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RootstockGovernor> {
    return super.deploy(_token, overrides || {}) as Promise<RootstockGovernor>;
  }
  override getDeployTransaction(
    _token: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_token, overrides || {});
  }
  override attach(address: string): RootstockGovernor {
    return super.attach(address) as RootstockGovernor;
  }
  override connect(signer: Signer): RootstockGovernor__factory {
    return super.connect(signer) as RootstockGovernor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RootstockGovernorInterface {
    return new utils.Interface(_abi) as RootstockGovernorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RootstockGovernor {
    return new Contract(address, _abi, signerOrProvider) as RootstockGovernor;
  }
}
