/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  RootstockGovernor,
  RootstockGovernorInterface,
} from "../../contracts/RootstockGovernor";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IVotes",
        name: "_token",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Empty",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "ProposalCanceled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "proposer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "targets",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "string[]",
        name: "signatures",
        type: "string[]",
      },
      {
        indexed: false,
        internalType: "bytes[]",
        name: "calldatas",
        type: "bytes[]",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "startBlock",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "endBlock",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "description",
        type: "string",
      },
    ],
    name: "ProposalCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "ProposalExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "oldProposalThreshold",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newProposalThreshold",
        type: "uint256",
      },
    ],
    name: "ProposalThresholdSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "oldQuorumNumerator",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newQuorumNumerator",
        type: "uint256",
      },
    ],
    name: "QuorumNumeratorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "support",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "weight",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "VoteCast",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "support",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "weight",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "reason",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "params",
        type: "bytes",
      },
    ],
    name: "VoteCastWithParams",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "oldVotingDelay",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newVotingDelay",
        type: "uint256",
      },
    ],
    name: "VotingDelaySet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "oldVotingPeriod",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newVotingPeriod",
        type: "uint256",
      },
    ],
    name: "VotingPeriodSet",
    type: "event",
  },
  {
    inputs: [],
    name: "BALLOT_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "COUNTING_MODE",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "EXTENDED_BALLOT_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "support",
        type: "uint8",
      },
    ],
    name: "castVote",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "support",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "castVoteBySig",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "support",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "castVoteWithReason",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "support",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "params",
        type: "bytes",
      },
    ],
    name: "castVoteWithReasonAndParams",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "support",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "params",
        type: "bytes",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "castVoteWithReasonAndParamsBySig",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "countingTypes",
    outputs: [
      {
        internalType: "enum GovernorCountingUniversal.CountingType",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "targets",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "calldatas",
        type: "bytes[]",
      },
      {
        internalType: "bytes32",
        name: "descriptionHash",
        type: "bytes32",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "getVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "params",
        type: "bytes",
      },
    ],
    name: "getVotesWithParams",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasVoted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "targets",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "calldatas",
        type: "bytes[]",
      },
      {
        internalType: "bytes32",
        name: "descriptionHash",
        type: "bytes32",
      },
    ],
    name: "hashProposal",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "proposalDeadline",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "proposalSnapshot",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposalThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "candidate",
        type: "uint8",
      },
    ],
    name: "proposalVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "candidateVotes",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "proposalVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "againstVotes",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "forVotes",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "abstainVotes",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "targets",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "calldatas",
        type: "bytes[]",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
    ],
    name: "propose",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "targets",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "calldatas",
        type: "bytes[]",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
    ],
    name: "proposeBallot",
    outputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "quorum",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "quorumDenominator",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "quorumNumerator",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "quorumNumerator",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "relay",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newProposalThreshold",
        type: "uint256",
      },
    ],
    name: "setProposalThreshold",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newVotingDelay",
        type: "uint256",
      },
    ],
    name: "setVotingDelay",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newVotingPeriod",
        type: "uint256",
      },
    ],
    name: "setVotingPeriod",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "state",
    outputs: [
      {
        internalType: "enum IGovernor.ProposalState",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IVotes",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newQuorumNumerator",
        type: "uint256",
      },
    ],
    name: "updateQuorumNumerator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "votingDelay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "votingPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6101606040523480156200001257600080fd5b5060405162003ee238038062003ee2833981016040819052620000359162000827565b600681600160146000604051806040016040528060118152602001702937b7ba39ba37b1b5a3b7bb32b93737b960791b81525080620000796200016660201b60201c565b815160208084019190912082518383012060e08290526101008190524660a0818152604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f81880181905281830187905260608201869052608082019490945230818401528151808203909301835260c00190528051940193909320919290916080523060c05261012052505082516200011f92506000915060208401906200078b565b506200012d90508362000181565b6200013882620001c2565b620001438162000269565b5050506001600160a01b0316610140526200015e81620002aa565b5050620008b5565b6040805180820190915260018152603160f81b602082015290565b60045460408051918252602082018390527fc565b045403dc03c2eea82b81a0465edad9e2e7fc4d97e11421c209da93d7a93910160405180910390a1600455565b60008111620002285760405162461bcd60e51b815260206004820152602760248201527f476f7665726e6f7253657474696e67733a20766f74696e6720706572696f6420604482015266746f6f206c6f7760c81b60648201526084015b60405180910390fd5b60055460408051918252602082018390527f7e3f7f0708a84de9203036abaa450dccc85ad5ff52f78c170f3edb55cf5e8828910160405180910390a1600555565b60065460408051918252602082018390527fccb45da8d5717e6c4544694297c4ba5cf151d455c9bb0ed4fc7a38411bc05461910160405180910390a1600655565b60648111156200032f5760405162461bcd60e51b815260206004820152604360248201527f476f7665726e6f72566f74657351756f72756d4672616374696f6e3a2071756f60448201527f72756d4e756d657261746f72206f7665722071756f72756d44656e6f6d696e616064820152623a37b960e91b608482015260a4016200021f565b60006200033b62000422565b905080158015906200034d5750600a54155b15620003c857600a6000016040518060400160405280600063ffffffff16815260200162000386846200045a60201b6200156b1760201c565b6001600160e01b0390811690915282546001810184556000938452602093849020835194909301519091166401000000000263ffffffff909316929092179101555b620003e382600a620004c960201b620015d81790919060201c565b505060408051828152602081018490527f0553476bf02ef2726e8ce5ced78d63e26e602e4a2257b1f559418e24b4633997910160405180910390a15050565b600a5460009015620004535762000445600a6200051c60201b6200160e1760201c565b6001600160e01b0316905090565b5060095490565b60006001600160e01b03821115620004c55760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20326044820152663234206269747360c81b60648201526084016200021f565b5090565b6000806200050684600001620004ea436200056a60201b620016551760201c565b62000500866200045a60201b6200156b1760201c565b620005d1565b6001600160e01b03918216969116945092505050565b80546000908015620005605762000548836200053a60018462000852565b600091825260209091200190565b5464010000000090046001600160e01b031662000563565b60005b9392505050565b600063ffffffff821115620004c55760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201526532206269747360d01b60648201526084016200021f565b8254600090819080156200072d576000620005f3876200053a60018562000852565b60408051808201909152905463ffffffff8082168084526401000000009092046001600160e01b031660208401529192509087161015620006775760405162461bcd60e51b815260206004820152601760248201527f436865636b706f696e743a20696e76616c6964206b657900000000000000000060448201526064016200021f565b8563ffffffff16816000015163ffffffff161415620006cc5784620006a3886200053a60018662000852565b80546001600160e01b03929092166401000000000263ffffffff9092169190911790556200071c565b6040805180820190915263ffffffff80881682526001600160e01b0380881660208085019182528b54600181018d5560008d81529190912094519151909216640100000000029216919091179101555b602001519250839150620007839050565b50506040805180820190915263ffffffff80851682526001600160e01b0380851660208085019182528854600181018a5560008a8152918220955192519093166401000000000291909316179201919091559050815b935093915050565b828054620007999062000878565b90600052602060002090601f016020900481019282620007bd576000855562000808565b82601f10620007d857805160ff191683800117855562000808565b8280016001018555821562000808579182015b8281111562000808578251825591602001919060010190620007eb565b50620004c59291505b80821115620004c5576000815560010162000811565b6000602082840312156200083a57600080fd5b81516001600160a01b03811681146200056357600080fd5b6000828210156200087357634e487b7160e01b600052601160045260246000fd5b500390565b600181811c908216806200088d57607f821691505b60208210811415620008af57634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a05160c05160e0516101005161012051610140516135c46200091e6000396000818161083901528181611e71015261200b015260006122d501526000612324015260006122ff0152600061225801526000612282015260006122ac01526135c46000f3fe60806040526004361061023e5760003560e01c806370b0f6601161012e578063c548482c116100ab578063eb9019d41161006f578063eb9019d41461079b578063ece40cc1146107bb578063f23a6e61146107db578063f8ce560a14610807578063fc0c546a1461082757600080fd5b8063c548482c146106c1578063c59057e4146106e1578063dd4e2ba514610701578063deaaa7cc14610747578063ea0217cf1461077b57600080fd5b8063a7713a70116100f2578063a7713a7014610638578063b58131b01461064d578063bc197c8114610662578063c01f9e371461068e578063c28bc2fa146106ae57600080fd5b806370b0f660146105a45780637b3c71d3146105c45780637d5e81e2146105e457806397c3d334146106045780639a802a6d1461061857600080fd5b80632fe3e261116101bc578063544ffc9c11610180578063544ffc9c146104df57806354fd4d501461051a57806356781388146105445780635f398a141461056457806360c4247f1461058457600080fd5b80632fe3e261146103ff5780633932abb1146104335780633bccf4fd146104485780633e4f49e614610468578063438596321461049557600080fd5b806306f3f9e61161020357806306f3f9e61461034657806306fdde0314610366578063150b7a02146103885780632656227d146103cc5780632d63f693146103df57600080fd5b806287231a1461024c57806301ffc9a71461029257806302a251a3146102c257806303420181146102e5578063048fd2ef1461030557600080fd5b3661024757005b005b600080fd5b34801561025857600080fd5b5061027c6102673660046127f0565b60086020526000908152604090205460ff1681565b604051610289919061281f565b60405180910390f35b34801561029e57600080fd5b506102b26102ad366004612839565b610873565b6040519015158152602001610289565b3480156102ce57600080fd5b506102d76108e0565b604051908152602001610289565b3480156102f157600080fd5b506102d7610300366004612977565b6108f0565b34801561031157600080fd5b506102d7610320366004612a1d565b600082815260076020908152604080832060ff8516845260010190915290205492915050565b34801561035257600080fd5b506102456103613660046127f0565b6109e8565b34801561037257600080fd5b5061037b610a38565b6040516102899190612aa5565b34801561039457600080fd5b506103b36103a3366004612acf565b630a85bd0160e11b949350505050565b6040516001600160e01b03199091168152602001610289565b6102d76103da366004612ca5565b610aca565b3480156103eb57600080fd5b506102d76103fa3660046127f0565b610bf1565b34801561040b57600080fd5b506102d77fb3b3f3b703cd84ce352197dcff232b1b5d3cfb2025ce47cf04742d0651f1af8881565b34801561043f57600080fd5b506102d7610c28565b34801561045457600080fd5b506102d7610463366004612d34565b610c33565b34801561047457600080fd5b506104886104833660046127f0565b610ca9565b6040516102899190612d82565b3480156104a157600080fd5b506102b26104b0366004612d96565b60008281526007602090815260408083206001600160a01b038516845260020190915290205460ff1692915050565b3480156104eb57600080fd5b506104ff6104fa3660046127f0565b610da6565b60408051938452602084019290925290820152606001610289565b34801561052657600080fd5b506040805180820190915260018152603160f81b602082015261037b565b34801561055057600080fd5b506102d761055f366004612a1d565b610ea5565b34801561057057600080fd5b506102d761057f366004612db9565b610ece565b34801561059057600080fd5b506102d761059f3660046127f0565b610f18565b3480156105b057600080fd5b506102456105bf3660046127f0565b610fad565b3480156105d057600080fd5b506102d76105df366004612e3c565b610ff1565b3480156105f057600080fd5b506102d76105ff366004612e95565b611043565b34801561061057600080fd5b5060646102d7565b34801561062457600080fd5b506102d7610633366004612f49565b611306565b34801561064457600080fd5b506102d761131d565b34801561065957600080fd5b506102d7611347565b34801561066e57600080fd5b506103b361067d366004612f9f565b63bc197c8160e01b95945050505050565b34801561069a57600080fd5b506102d76106a93660046127f0565b611352565b6102456106bc36600461302e565b611381565b3480156106cd57600080fd5b506102d76106dc366004612e95565b61144d565b3480156106ed57600080fd5b506102d76106fc366004612ca5565b61147d565b34801561070d57600080fd5b506040805180820190915260208082527f737570706f72743d627261766f2671756f72756d3d666f722c6162737461696e9082015261037b565b34801561075357600080fd5b506102d77f150214d74d59b7d1e90c73fc22ef3d991dd0a76b046543d4d80ab92d2a50328f81565b34801561078757600080fd5b506102456107963660046127f0565b6114b7565b3480156107a757600080fd5b506102d76107b636600461306f565b6114fb565b3480156107c757600080fd5b506102456107d63660046127f0565b61151c565b3480156107e757600080fd5b506103b36107f6366004613099565b63f23a6e6160e01b95945050505050565b34801561081357600080fd5b506102d76108223660046127f0565b611560565b34801561083357600080fd5b5061085b7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610289565b60006001600160e01b0319821663bf26d89760e01b14806108a457506001600160e01b031982166379dd796f60e01b145b806108bf57506001600160e01b03198216630271189760e51b145b806108da57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60006108eb60055490565b905090565b60008061099461098c7fb3b3f3b703cd84ce352197dcff232b1b5d3cfb2025ce47cf04742d0651f1af888c8c8c8c60405161092c9291906130fd565b60405180910390208b80519060200120604051602001610971959493929190948552602085019390935260ff9190911660408401526060830152608082015260a00190565b604051602081830303815290604052805190602001206116ba565b868686611708565b90506109da8a828b8b8b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508d9250611726915050565b9a9950505050505050505050565b333014610a105760405162461bcd60e51b8152600401610a079061310d565b60405180910390fd5b610a2c565b80610a206002611888565b14610a2a57610a15565b505b610a3581611907565b50565b606060008054610a4790613144565b80601f0160208091040260200160405190810160405280929190818152602001828054610a7390613144565b8015610ac05780601f10610a9557610100808354040283529160200191610ac0565b820191906000526020600020905b815481529060010190602001808311610aa357829003601f168201915b5050505050905090565b600080610ad98686868661147d565b90506000610ae682610ca9565b90506004816007811115610afc57610afc612809565b1480610b1957506005816007811115610b1757610b17612809565b145b610b6f5760405162461bcd60e51b815260206004820152602160248201527f476f7665726e6f723a2070726f706f73616c206e6f74207375636365737366756044820152601b60fa1b6064820152608401610a07565b600082815260016020818152604092839020600201805460ff191690921790915590518381527f712ae1383f79ac853f8d882153778e0260ef8f03b504e2866e0593e04d2b291f910160405180910390a1610bcd8288888888611a53565b610bda8288888888611ae1565b610be78288888888611a53565b5095945050505050565b60008181526001602090815260408083208151928301909152546001600160401b0316908190525b6001600160401b031692915050565b60006108eb60045490565b604080517f150214d74d59b7d1e90c73fc22ef3d991dd0a76b046543d4d80ab92d2a50328f602082015290810186905260ff851660608201526000908190610c819061098c90608001610971565b9050610c9e87828860405180602001604052806000815250611bd7565b979650505050505050565b6000818152600160205260408120600281015460ff1615610ccd5750600792915050565b6002810154610100900460ff1615610ce85750600292915050565b6000610cf384610bf1565b905080610d425760405162461bcd60e51b815260206004820152601d60248201527f476f7665726e6f723a20756e6b6e6f776e2070726f706f73616c2069640000006044820152606401610a07565b438110610d53575060009392505050565b6000610d5e85611352565b9050438110610d7257506001949350505050565b610d7b85611c03565b8015610d8b5750610d8b85611c8b565b15610d9b57506004949350505050565b506003949350505050565b600081815260076020526040812081908190600160008681526008602052604090205460ff166001811115610ddd57610ddd612809565b1415610e775760405162461bcd60e51b815260206004820152605e60248201527f476f7665726e6f72436f756e74696e67556e6976657273616c3a2042616c6c6f60448201527f74206d6f64652e205573652070726f706f73616c566f7465732875696e74323560648201527f362070726f706f73616c49642c2075696e74382063616e646964617465290000608482015260a401610a07565b6000808052600191820160205260408082205492825280822054600283529120549196909550909350915050565b600080339050610ec684828560405180602001604052806000815250611bd7565b949350505050565b600080339050610c9e87828888888080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508a9250611726915050565b600a5460009080610f2d575050600954919050565b6000600a610f3c60018461318f565b81548110610f4c57610f4c6131a6565b60009182526020918290206040805180820190915291015463ffffffff8116808352600160201b9091046001600160e01b03169282019290925291508410610fa257602001516001600160e01b03169392505050565b610ec6600a85611ced565b333014610fcc5760405162461bcd60e51b8152600401610a079061310d565b610fe8565b80610fdc6002611888565b14610fe657610fd1565b505b610a3581611d9f565b60008033905061103986828787878080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611bd792505050565b9695505050505050565b600061104d611347565b61105c336107b660014361318f565b10156110c45760405162461bcd60e51b815260206004820152603160248201527f476f7665726e6f723a2070726f706f73657220766f7465732062656c6f7720706044820152701c9bdc1bdcd85b081d1a1c995cda1bdb19607a1b6064820152608401610a07565b60006110d9868686868051906020012061147d565b905084518651146110fc5760405162461bcd60e51b8152600401610a07906131bc565b835186511461111d5760405162461bcd60e51b8152600401610a07906131bc565b600086511161116e5760405162461bcd60e51b815260206004820152601860248201527f476f7665726e6f723a20656d7074792070726f706f73616c00000000000000006044820152606401610a07565b600081815260016020908152604091829020825191820190925281546001600160401b031690819052156111ee5760405162461bcd60e51b815260206004820152602160248201527f476f7665726e6f723a2070726f706f73616c20616c72656164792065786973746044820152607360f81b6064820152608401610a07565b60006112006111fb610c28565b611de0565b61120943611de0565b61121391906131fd565b905060006112226111fb6108e0565b61122c90836131fd565b835467ffffffffffffffff19166001600160401b038416178455905060018301805467ffffffffffffffff19166001600160401b0383161790557f7d84a6263ae0d98d3329bd7b46bb4e8d6f98cd35a7adb45c274c8b7fd5ebd5e084338b8b8d516001600160401b038111156112a4576112a46128ba565b6040519080825280602002602001820160405280156112d757816020015b60608152602001906001900390816112c25790505b508c88888e6040516112f1999897969594939291906132ee565b60405180910390a15091979650505050505050565b6000611313848484611e48565b90505b9392505050565b600a546000901561134057611332600a61160e565b6001600160e01b0316905090565b5060095490565b60006108eb60065490565b60008181526001602081815260408084208151928301909152909101546001600160401b031690819052610c19565b3330146113a05760405162461bcd60e51b8152600401610a079061310d565b6113bc565b806113b06002611888565b146113ba576113a5565b505b600080856001600160a01b03168585856040516113da9291906130fd565b60006040518083038185875af1925050503d8060008114611417576040519150601f19603f3d011682016040523d82523d6000602084013e61141c565b606091505b5091509150611444828260405180606001604052806028815260200161354060289139611eed565b50505050505050565b600061145b85858585611043565b6000818152600860205260409020805460ff1916600117905595945050505050565b60008484848460405160200161149694939291906133dd565b60408051601f19818403018152919052805160209091012095945050505050565b3330146114d65760405162461bcd60e51b8152600401610a079061310d565b6114f2565b806114e66002611888565b146114f0576114db565b505b610a3581611f06565b6000611316838361151760408051602081019091526000815290565b611e48565b33301461153b5760405162461bcd60e51b8152600401610a079061310d565b611557565b8061154b6002611888565b1461155557611540565b505b610a3581611fa7565b60006108da82611fe8565b60006001600160e01b038211156115d45760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20326044820152663234206269747360c81b6064820152608401610a07565b5090565b6000806115f6846115e843611655565b6115f18661156b565b6120a1565b6001600160e01b0391821693501690505b9250929050565b8054600090801561164c576116368361162860018461318f565b600091825260209091200190565b54600160201b90046001600160e01b0316611316565b60009392505050565b600063ffffffff8211156115d45760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201526532206269747360d01b6064820152608401610a07565b60006108da6116c761224b565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b600080600061171987878787612372565b91509150610be781612436565b600085815260016020819052604082209061174088610ca9565b600781111561175157611751612809565b146117aa5760405162461bcd60e51b815260206004820152602360248201527f476f7665726e6f723a20766f7465206e6f742063757272656e746c792061637460448201526269766560e81b6064820152608401610a07565b604080516020810190915281546001600160401b0316908190526000906117d390889086611e48565b90506117e28888888488612584565b835161183457866001600160a01b03167fb8e138887d0aa13bab447e82de9d5c1777041ecd21ca36ba824ff1e6c07ddda4898884896040516118279493929190613428565b60405180910390a2610c9e565b866001600160a01b03167fe2babfbac5889a709b63bb7f598b324e08bc5a4fb9ec647fb3cbc9ec07eb87128988848989604051611875959493929190613450565b60405180910390a2979650505050505050565b60006118a38254600f81810b600160801b909204900b131590565b156118c157604051631ed9509560e11b815260040160405180910390fd5b508054600f0b6000818152600180840160205260408220805492905583546fffffffffffffffffffffffffffffffff191692016001600160801b03169190911790915590565b606481111561198a5760405162461bcd60e51b815260206004820152604360248201527f476f7665726e6f72566f74657351756f72756d4672616374696f6e3a2071756f60448201527f72756d4e756d657261746f72206f7665722071756f72756d44656e6f6d696e616064820152623a37b960e91b608482015260a401610a07565b600061199461131d565b905080158015906119a55750600a54155b15611a09576040805180820190915260008152600a90602081016119c88461156b565b6001600160e01b039081169091528254600181018455600093845260209384902083519490930151909116600160201b0263ffffffff909316929092179101555b611a14600a836115d8565b505060408051828152602081018490527f0553476bf02ef2726e8ce5ced78d63e26e602e4a2257b1f559418e24b4633997910160405180910390a15050565b611ada565b8451811015611ad857306001600160a01b0316858281518110611a7d57611a7d6131a6565b60200260200101516001600160a01b03161415611ac857611ac8838281518110611aa957611aa96131a6565b602002602001015180519060200120600261271190919063ffffffff16565b611ad181613496565b9050611a58565b505b5050505050565b600060405180606001604052806027815260200161356860279139905060005b855181101561144457600080878381518110611b1f57611b1f6131a6565b60200260200101516001600160a01b0316878481518110611b4257611b426131a6565b6020026020010151878581518110611b5c57611b5c6131a6565b6020026020010151604051611b7191906134b1565b60006040518083038185875af1925050503d8060008114611bae576040519150601f19603f3d011682016040523d82523d6000602084013e611bb3565b606091505b5091509150611bc3828286611eed565b50505080611bd090613496565b9050611b01565b6000611bfa85858585611bf560408051602081019091526000815290565b611726565b95945050505050565b6000818152600760205260408120600160008481526008602052604090205460ff166001811115611c3657611c36612809565b1415611c53578054611c4a61082285610bf1565b11159392505050565b60026000908152600180830160205260408083205491835290912054611c7991906134cd565b611c4a61082285610bf1565b50919050565b6000818152600760205260408120600160008481526008602052604090205460ff166001811115611cbe57611cbe612809565b1415611ccd5761131683611c03565b600080805260019182016020526040808220549282529020541192915050565b6000438210611d3e5760405162461bcd60e51b815260206004820181905260248201527f436865636b706f696e74733a20626c6f636b206e6f7420796574206d696e65646044820152606401610a07565b6000611d4983611655565b84549091506000611d5c8684838561274d565b90508015611d8957611d738661162860018461318f565b54600160201b90046001600160e01b0316611d8c565b60005b6001600160e01b03169695505050505050565b60045460408051918252602082018390527fc565b045403dc03c2eea82b81a0465edad9e2e7fc4d97e11421c209da93d7a93910160405180910390a1600455565b60006001600160401b038211156115d45760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203660448201526534206269747360d01b6064820152608401610a07565b604051630748d63560e31b81526001600160a01b038481166004830152602482018490526000917f000000000000000000000000000000000000000000000000000000000000000090911690633a46b1a89060440160206040518083038186803b158015611eb557600080fd5b505afa158015611ec9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061131391906134e5565b60608315611efc575081611316565b61131683836127ab565b60008111611f665760405162461bcd60e51b815260206004820152602760248201527f476f7665726e6f7253657474696e67733a20766f74696e6720706572696f6420604482015266746f6f206c6f7760c81b6064820152608401610a07565b60055460408051918252602082018390527f7e3f7f0708a84de9203036abaa450dccc85ad5ff52f78c170f3edb55cf5e8828910160405180910390a1600555565b60065460408051918252602082018390527fccb45da8d5717e6c4544694297c4ba5cf151d455c9bb0ed4fc7a38411bc05461910160405180910390a1600655565b60006064611ff583610f18565b604051632394e7a360e21b8152600481018590527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690638e539e8c9060240160206040518083038186803b15801561205557600080fd5b505afa158015612069573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061208d91906134e5565b61209791906134fe565b6108da919061351d565b8254600090819080156121ee5760006120bf8761162860018561318f565b60408051808201909152905463ffffffff808216808452600160201b9092046001600160e01b0316602084015291925090871610156121405760405162461bcd60e51b815260206004820152601760248201527f436865636b706f696e743a20696e76616c6964206b65790000000000000000006044820152606401610a07565b8563ffffffff16816000015163ffffffff16141561218f57846121688861162860018661318f565b80546001600160e01b0392909216600160201b0263ffffffff9092169190911790556121de565b6040805180820190915263ffffffff80881682526001600160e01b0380881660208085019182528b54600181018d5560008d81529190912094519151909216600160201b029216919091179101555b6020015192508391506122439050565b50506040805180820190915263ffffffff80851682526001600160e01b0380851660208085019182528854600181018a5560008a815291822095519251909316600160201b0291909316179201919091559050815b935093915050565b6000306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480156122a457507f000000000000000000000000000000000000000000000000000000000000000046145b156122ce57507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156123a9575060009050600361242d565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156123fd573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166124265760006001925092505061242d565b9150600090505b94509492505050565b600081600481111561244a5761244a612809565b14156124535750565b600181600481111561246757612467612809565b14156124b55760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610a07565b60028160048111156124c9576124c9612809565b14156125175760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610a07565b600381600481111561252b5761252b612809565b1415610a355760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610a07565b60008581526007602090815260408083206001600160a01b0388168452600281019092529091205460ff16156126115760405162461bcd60e51b815260206004820152602c60248201527f476f7665726e6f72436f756e74696e67556e6976657273616c3a20766f74652060448201526b185b1c9958591e4818d85cdd60a21b6064820152608401610a07565b6001600160a01b03851660009081526002820160205260408120805460ff191660011790558154849183916126479084906134cd565b909155506001905060008781526008602052604090205460ff16600181111561267257612672612809565b14158015612683575060028460ff16115b156126e05760405162461bcd60e51b815260206004820152602760248201527f476f7665726e6f72436f756e74696e67556e6976657273616c3a20696e76616c604482015266696420766f746560c81b6064820152608401610a07565b60ff84166000908152600182016020526040812080548592906127049084906134cd565b9091555050505050505050565b8154600160801b90819004600f0b6000818152600180860160205260409091209390935583546001600160801b03908116939091011602179055565b60005b818310156127a357600061276484846127d5565b60008781526020902090915063ffffffff86169082015463ffffffff16111561278f5780925061279d565b61279a8160016134cd565b93505b50612750565b509392505050565b8151156127bb5781518083602001fd5b8060405162461bcd60e51b8152600401610a079190612aa5565b60006127e4600284841861351d565b611316908484166134cd565b60006020828403121561280257600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b602081016002831061283357612833612809565b91905290565b60006020828403121561284b57600080fd5b81356001600160e01b03198116811461131657600080fd5b803560ff8116811461287457600080fd5b919050565b60008083601f84011261288b57600080fd5b5081356001600160401b038111156128a257600080fd5b60208301915083602082850101111561160757600080fd5b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b03811182821017156128f8576128f86128ba565b604052919050565b60006001600160401b03831115612919576129196128ba565b61292c601f8401601f19166020016128d0565b905082815283838301111561294057600080fd5b828260208301376000602084830101529392505050565b600082601f83011261296857600080fd5b61131683833560208501612900565b60008060008060008060008060e0898b03121561299357600080fd5b883597506129a360208a01612863565b965060408901356001600160401b03808211156129bf57600080fd5b6129cb8c838d01612879565b909850965060608b01359150808211156129e457600080fd5b506129f18b828c01612957565b945050612a0060808a01612863565b925060a0890135915060c089013590509295985092959890939650565b60008060408385031215612a3057600080fd5b82359150612a4060208401612863565b90509250929050565b60005b83811015612a64578181015183820152602001612a4c565b83811115612a73576000848401525b50505050565b60008151808452612a91816020860160208601612a49565b601f01601f19169290920160200192915050565b6020815260006113166020830184612a79565b80356001600160a01b038116811461287457600080fd5b60008060008060808587031215612ae557600080fd5b612aee85612ab8565b9350612afc60208601612ab8565b92506040850135915060608501356001600160401b03811115612b1e57600080fd5b612b2a87828801612957565b91505092959194509250565b60006001600160401b03821115612b4f57612b4f6128ba565b5060051b60200190565b600082601f830112612b6a57600080fd5b81356020612b7f612b7a83612b36565b6128d0565b82815260059290921b84018101918181019086841115612b9e57600080fd5b8286015b84811015612bc057612bb381612ab8565b8352918301918301612ba2565b509695505050505050565b600082601f830112612bdc57600080fd5b81356020612bec612b7a83612b36565b82815260059290921b84018101918181019086841115612c0b57600080fd5b8286015b84811015612bc05780358352918301918301612c0f565b600082601f830112612c3757600080fd5b81356020612c47612b7a83612b36565b82815260059290921b84018101918181019086841115612c6657600080fd5b8286015b84811015612bc05780356001600160401b03811115612c895760008081fd5b612c978986838b0101612957565b845250918301918301612c6a565b60008060008060808587031215612cbb57600080fd5b84356001600160401b0380821115612cd257600080fd5b612cde88838901612b59565b95506020870135915080821115612cf457600080fd5b612d0088838901612bcb565b94506040870135915080821115612d1657600080fd5b50612d2387828801612c26565b949793965093946060013593505050565b600080600080600060a08688031215612d4c57600080fd5b85359450612d5c60208701612863565b9350612d6a60408701612863565b94979396509394606081013594506080013592915050565b602081016008831061283357612833612809565b60008060408385031215612da957600080fd5b82359150612a4060208401612ab8565b600080600080600060808688031215612dd157600080fd5b85359450612de160208701612863565b935060408601356001600160401b0380821115612dfd57600080fd5b612e0989838a01612879565b90955093506060880135915080821115612e2257600080fd5b50612e2f88828901612957565b9150509295509295909350565b60008060008060608587031215612e5257600080fd5b84359350612e6260208601612863565b925060408501356001600160401b03811115612e7d57600080fd5b612e8987828801612879565b95989497509550505050565b60008060008060808587031215612eab57600080fd5b84356001600160401b0380821115612ec257600080fd5b612ece88838901612b59565b95506020870135915080821115612ee457600080fd5b612ef088838901612bcb565b94506040870135915080821115612f0657600080fd5b612f1288838901612c26565b93506060870135915080821115612f2857600080fd5b508501601f81018713612f3a57600080fd5b612b2a87823560208401612900565b600080600060608486031215612f5e57600080fd5b612f6784612ab8565b92506020840135915060408401356001600160401b03811115612f8957600080fd5b612f9586828701612957565b9150509250925092565b600080600080600060a08688031215612fb757600080fd5b612fc086612ab8565b9450612fce60208701612ab8565b935060408601356001600160401b0380821115612fea57600080fd5b612ff689838a01612bcb565b9450606088013591508082111561300c57600080fd5b61301889838a01612bcb565b93506080880135915080821115612e2257600080fd5b6000806000806060858703121561304457600080fd5b61304d85612ab8565b93506020850135925060408501356001600160401b03811115612e7d57600080fd5b6000806040838503121561308257600080fd5b61308b83612ab8565b946020939093013593505050565b600080600080600060a086880312156130b157600080fd5b6130ba86612ab8565b94506130c860208701612ab8565b9350604086013592506060860135915060808601356001600160401b038111156130f157600080fd5b612e2f88828901612957565b8183823760009101908152919050565b60208082526018908201527f476f7665726e6f723a206f6e6c79476f7665726e616e63650000000000000000604082015260600190565b600181811c9082168061315857607f821691505b60208210811415611c8557634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000828210156131a1576131a1613179565b500390565b634e487b7160e01b600052603260045260246000fd5b60208082526021908201527f476f7665726e6f723a20696e76616c69642070726f706f73616c206c656e67746040820152600d60fb1b606082015260800190565b60006001600160401b0380831681851680830382111561321f5761321f613179565b01949350505050565b600081518084526020808501945080840160005b838110156132615781516001600160a01b03168752958201959082019060010161323c565b509495945050505050565b600081518084526020808501945080840160005b8381101561326157815187529582019590820190600101613280565b6000815180845260208085019450848260051b860182860160005b858110156132e15783830389526132cf838351612a79565b988501989250908401906001016132b7565b5090979650505050505050565b60006101208b8352602060018060a01b038c16818501528160408501526133178285018c613228565b9150838203606085015261332b828b61326c565b915083820360808501528189518084528284019150828160051b850101838c0160005b8381101561337c57601f1987840301855261336a838351612a79565b9486019492509085019060010161334e565b505086810360a0880152613390818c61329c565b9450505050506133ab60c08401876001600160401b03169052565b6001600160401b03851660e08401528281036101008401526133cd8185612a79565b9c9b505050505050505050505050565b6080815260006133f06080830187613228565b8281036020840152613402818761326c565b90508281036040840152613416818661329c565b91505082606083015295945050505050565b84815260ff841660208201528260408201526080606082015260006110396080830184612a79565b85815260ff8516602082015283604082015260a06060820152600061347860a0830185612a79565b828103608084015261348a8185612a79565b98975050505050505050565b60006000198214156134aa576134aa613179565b5060010190565b600082516134c3818460208701612a49565b9190910192915050565b600082198211156134e0576134e0613179565b500190565b6000602082840312156134f757600080fd5b5051919050565b600081600019048311821515161561351857613518613179565b500290565b60008261353a57634e487b7160e01b600052601260045260246000fd5b50049056fe476f7665726e6f723a2072656c617920726576657274656420776974686f7574206d657373616765476f7665726e6f723a2063616c6c20726576657274656420776974686f7574206d657373616765a264697066735822122067951620bdb52dc1dd7647f137f5d49db58861858165b7bfd44b1a8dc61237a464736f6c63430008090033";

type RootstockGovernorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RootstockGovernorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RootstockGovernor__factory extends ContractFactory {
  constructor(...args: RootstockGovernorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _token: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RootstockGovernor> {
    return super.deploy(_token, overrides || {}) as Promise<RootstockGovernor>;
  }
  override getDeployTransaction(
    _token: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_token, overrides || {});
  }
  override attach(address: string): RootstockGovernor {
    return super.attach(address) as RootstockGovernor;
  }
  override connect(signer: Signer): RootstockGovernor__factory {
    return super.connect(signer) as RootstockGovernor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RootstockGovernorInterface {
    return new utils.Interface(_abi) as RootstockGovernorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RootstockGovernor {
    return new Contract(address, _abi, signerOrProvider) as RootstockGovernor;
  }
}
