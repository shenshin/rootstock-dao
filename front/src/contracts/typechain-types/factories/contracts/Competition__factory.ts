/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  Competition,
  CompetitionInterface,
} from "../../contracts/Competition";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract RootstockGovernor",
        name: "_governor",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    stateMutability: "nonpayable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "awards",
    outputs: [
      {
        internalType: "contract Awards",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "governor",
    outputs: [
      {
        internalType: "contract RootstockGovernor",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "contestName",
        type: "string",
      },
      {
        internalType: "address[]",
        name: "teams",
        type: "address[]",
      },
    ],
    name: "onCompetitionEnd",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract Awards",
        name: "_awards",
        type: "address",
      },
    ],
    name: "setAwards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b5060405161163f38038061163f83398101604081905261002f91610099565b61003833610049565b6001600160a01b03166080526100c9565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100ab57600080fd5b81516001600160a01b03811681146100c257600080fd5b9392505050565b6080516115466100f960003960008181610146015281816102440152818161076a015261095c01526115466000f3fe6080604052600436106100745760003560e01c80638da5cb5b1161004e5780638da5cb5b146101bb578063ada43659146101d9578063e12bef6d146101f9578063f2fde38b14610219576100d4565b80630c340a241461013457806371369ef114610184578063715018a6146101a6576100d4565b366100d45760405162461bcd60e51b815260206004820152602560248201527f436f6d7065746974696f6e3a204e6f206e65656420746f2073656e64206d65206044820152646d6f6e657960d81b60648201526084015b60405180910390fd5b3480156100e057600080fd5b5060405162461bcd60e51b815260206004820152602260248201527f436f6d7065746974696f6e3a20556e6b6e6f776e2066756e6374696f6e2063616044820152611b1b60f21b60648201526084016100cb565b34801561014057600080fd5b506101687f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200160405180910390f35b34801561019057600080fd5b506101a461019f36600461113b565b610239565b005b3480156101b257600080fd5b506101a461053a565b3480156101c757600080fd5b506000546001600160a01b0316610168565b3480156101e557600080fd5b50600154610168906001600160a01b031681565b34801561020557600080fd5b506101a4610214366004611215565b61054e565b34801561022557600080fd5b506101a4610234366004611215565b610578565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146102c95760405162461bcd60e51b815260206004820152602f60248201527f436f6d7065746974696f6e3a2043616e2062652063616c6c6564206f6e6c792060448201526e313c903a34329023b7bb32b93737b960891b60648201526084016100cb565b6001811180156102da575060fa8111155b61033d5760405162461bcd60e51b815260206004820152602e60248201527f436f6d7065746974696f6e733a204d696e20322c206d6178203235302074656160448201526d1b5cc8185c9948185b1b1bddd95960921b60648201526084016100cb565b600061034b858585856105f1565b9050600061038c8285858080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525061080292505050565b905060005b81518160ff1610156105305760005b828260ff16815181106103b5576103b5611239565b6020026020010151518160ff16101561051d57828260ff16815181106103dd576103dd611239565b60200260200101518160ff16815181106103f9576103f9611239565b602002602001015160000151600014156104165750505050610534565b60015483516001600160a01b0390911690630e54ef10908a908a90879060ff881690811061044657610446611239565b60200260200101518560ff168151811061046257610462611239565b602002602001015160000151878760ff168151811061048357610483611239565b60200260200101518660ff168151811061049f5761049f611239565b6020026020010151602001518760016104b89190611265565b6040518663ffffffff1660e01b81526004016104d89594939291906112b3565b600060405180830381600087803b1580156104f257600080fd5b505af1158015610506573d6000803e3d6000fd5b505050508080610515906112f0565b9150506103a0565b5080610528816112f0565b915050610391565b5050505b50505050565b610542610f9c565b61054c6000610ff6565b565b610556610f9c565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b610580610f9c565b6001600160a01b0381166105e55760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016100cb565b6105ee81610ff6565b50565b60408051600180825281830190925260009182919060208083019080368337019050509050308160008151811061062a5761062a611239565b6001600160a01b03929092166020928302919091019091015260408051600180825281830190925260009181602001602082028036833701905050905060008160008151811061067c5761067c611239565b6020908102919091010152604080516001808252818301909252600091816020015b606081526020019060019003908161069e5750506040519091506371369ef160e01b906106d5908a908a908a908a90602401611326565b604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b0383818316178352505050508160008151811061071b5761071b611239565b60200260200101819052506000888860405160200161073b92919061138b565b60408051601f1981840301815290829052805160209091012063316415f960e21b825291506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063c59057e4906107a5908790879087908790600401611429565b60206040518083038186803b1580156107bd57600080fd5b505afa1580156107d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107f591906114c8565b9998505050505050505050565b60408051600380825260808201909252606091816020015b606081526020019060019003908161081a575050604080516001808252818301909252919250602082015b6040805180820190915260008082526020820152815260200190600190039081610845579050508160008151811061087f5761087f611239565b602090810291909101015260408051600180825281830190925290816020015b604080518082019091526000808252602082015281526020019060019003908161089f57905050816001815181106108d9576108d9611239565b602090810291909101015260408051600180825281830190925290816020015b60408051808201909152600080825260208201528152602001906001900390816108f9579050508160028151811061093357610933611239565b602002602001018190525060005b82518160ff161015610f9557600060405180604001604052807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663048fd2ef888660016109979190611265565b6040516001600160e01b031960e085901b168152600481019290925260ff16602482015260440160206040518083038186803b1580156109d657600080fd5b505afa1580156109ea573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a0e91906114c8565b8152602001858460ff1681518110610a2857610a28611239565b60200260200101516001600160a01b03168152509050806000015160001415610a515750610f83565b82600081518110610a6457610a64611239565b6020026020010151600184600081518110610a8157610a81611239565b602002602001015151610a9491906114e1565b81518110610aa457610aa4611239565b60200260200101516000015181600001511115610bc55782600181518110610ace57610ace611239565b602002602001015183600281518110610ae957610ae9611239565b602002602001018190525082600081518110610b0757610b07611239565b602002602001015183600181518110610b2257610b22611239565b602090810291909101015260408051600180825281830190925290816020015b6040805180820190915260008082526020820152815260200190600190039081610b425790505083600081518110610b7c57610b7c611239565b60200260200101819052508083600081518110610b9b57610b9b611239565b6020026020010151600081518110610bb557610bb5611239565b6020026020010181905250610f81565b82600081518110610bd857610bd8611239565b6020026020010151600184600081518110610bf557610bf5611239565b602002602001015151610c0891906114e1565b81518110610c1857610c18611239565b60200260200101516000015181600001511415610c6657610c5383600081518110610c4557610c45611239565b602002602001015182611046565b83600081518110610bb557610bb5611239565b82600181518110610c7957610c79611239565b6020026020010151600184600181518110610c9657610c96611239565b602002602001015151610ca991906114e1565b81518110610cb957610cb9611239565b60200260200101516000015181600001511115610d775782600181518110610ce357610ce3611239565b602002602001015183600281518110610cfe57610cfe611239565b602090810291909101015260408051600180825281830190925290816020015b6040805180820190915260008082526020820152815260200190600190039081610d1e5790505083600181518110610d5857610d58611239565b60200260200101819052508083600181518110610b9b57610b9b611239565b82600181518110610d8a57610d8a611239565b6020026020010151600184600181518110610da757610da7611239565b602002602001015151610dba91906114e1565b81518110610dca57610dca611239565b60200260200101516000015181600001511415610e0a57610df783600181518110610c4557610c45611239565b83600181518110610bb557610bb5611239565b82600281518110610e1d57610e1d611239565b6020026020010151600184600281518110610e3a57610e3a611239565b602002602001015151610e4d91906114e1565b81518110610e5d57610e5d611239565b60200260200101516000015181600001511115610ee25760408051600180825281830190925290816020015b6040805180820190915260008082526020820152815260200190600190039081610e895790505083600281518110610ec357610ec3611239565b60200260200101819052508083600281518110610b9b57610b9b611239565b82600281518110610ef557610ef5611239565b6020026020010151600184600281518110610f1257610f12611239565b602002602001015151610f2591906114e1565b81518110610f3557610f35611239565b60200260200101516000015181600001511415610f8157610f6283600281518110610c4557610c45611239565b83600281518110610f7557610f75611239565b60200260200101819052505b505b80610f8d816112f0565b915050610941565b5092915050565b6000546001600160a01b0316331461054c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016100cb565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60608251600161105691906114f8565b67ffffffffffffffff81111561106e5761106e611310565b6040519080825280602002602001820160405280156110b357816020015b604080518082019091526000808252602082015281526020019060019003908161108c5790505b50905060005b83518160ff16101561111557838160ff16815181106110da576110da611239565b6020026020010151828260ff16815181106110f7576110f7611239565b6020026020010181905250808061110d906112f0565b9150506110b9565b50818184518151811061112a5761112a611239565b602002602001018190525092915050565b6000806000806040858703121561115157600080fd5b843567ffffffffffffffff8082111561116957600080fd5b818701915087601f83011261117d57600080fd5b81358181111561118c57600080fd5b88602082850101111561119e57600080fd5b6020928301965094509086013590808211156111b957600080fd5b818701915087601f8301126111cd57600080fd5b8135818111156111dc57600080fd5b8860208260051b85010111156111f157600080fd5b95989497505060200194505050565b6001600160a01b03811681146105ee57600080fd5b60006020828403121561122757600080fd5b813561123281611200565b9392505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff84168060ff038211156112825761128261124f565b019392505050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6080815260006112c760808301878961128a565b6020830195909552506001600160a01b0392909216604083015260ff1660609091015292915050565b600060ff821660ff8114156113075761130761124f565b60010192915050565b634e487b7160e01b600052604160045260246000fd5b60408152600061133a60408301868861128a565b8281036020848101919091528482528591810160005b8681101561137e57833561136381611200565b6001600160a01b031682529282019290820190600101611350565b5098975050505050505050565b8183823760009101908152919050565b600081518084526020808501808196508360051b810191508286016000805b8681101561141b578385038a5282518051808752835b818110156113eb578281018901518882018a015288016113d0565b818111156113fb578489838a0101525b509a87019a601f01601f19169590950186019450918501916001016113ba565b509298975050505050505050565b6080808252855190820181905260009060209060a0840190828901845b8281101561146b5781516001600160a01b031684529284019290840190600101611446565b5050508381038285015286518082528783019183019060005b818110156114a057835183529284019291840191600101611484565b505084810360408601526114b4818861139b565b935050505082606083015295945050505050565b6000602082840312156114da57600080fd5b5051919050565b6000828210156114f3576114f361124f565b500390565b6000821982111561150b5761150b61124f565b50019056fea2646970667358221220c7558c466c80352cd9a2e5e7642bfd816c4c5e03a5cb8aa618bede779509c3b964736f6c63430008090033";

type CompetitionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CompetitionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Competition__factory extends ContractFactory {
  constructor(...args: CompetitionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _governor: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Competition> {
    return super.deploy(_governor, overrides || {}) as Promise<Competition>;
  }
  override getDeployTransaction(
    _governor: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_governor, overrides || {});
  }
  override attach(address: string): Competition {
    return super.attach(address) as Competition;
  }
  override connect(signer: Signer): Competition__factory {
    return super.connect(signer) as Competition__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CompetitionInterface {
    return new utils.Interface(_abi) as CompetitionInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Competition {
    return new Contract(address, _abi, signerOrProvider) as Competition;
  }
}
